body {
	font: 100% Calibri, Verdana, Arial, Helvetica, sans-serif;
	background: url(../images/background.png) repeat-x;
	background-color: white;
	margin: 0; /* it's good practice to zero the margin and padding of the body element to account for differing browser defaults */
	padding: 0;
	text-align: center; /* this centers the container in IE 5* browsers. The text is then set to the left aligned default in the #container selector */
	color: #000000;
}



.oneColFixCtrHdr #container {
	width: 780px;  /* using 20px less than a full 800px width allows for browser chrome and avoids a horizontal scroll bar */
	background: none;
	margin: 0 auto; /* the auto margins (in conjunction with a width) center the page */
	text-align: left; /* this overrides the text-align: center on the body element. */
	height:auto;
}
.oneColFixCtrHdr #header {
	background: url(../images/header.png);
	padding: 0 0px 0 0px;  /* this padding matches the left alignment of the elements in the divs that appear beneath it. If an image is used in the #header instead of text, you may want to remove the padding. */
	color: #CCC;
	font-size: 25px;
	font-family: Pristina;
	text-align: center;
	height:80px;
	margin:0 0 0 0;
}
.oneColFixCtrHdr #header h1 {
	margin: 0; /* zeroing the margin of the last element in the #header div will avoid margin collapse - an unexplainable space between divs. If the div has a border around it, this is not necessary as that also avoids the margin collapse */
	padding: 0 0; /* using padding instead of margin will allow you to keep the element away from the edges of the div */
}
.oneColFixCtrHdr #mainContent {
	padding: 0 0px; /* remember that padding is the space inside the div box and margin is the space outside the div box */
	background: url(../images/contentbackground.png) repeat-x;
	background-color: #f0f0f0;
	text-align: center;
	font-style:normal;
	margin:0px 0 0 0;
}

.oneColFixCtrHdr #mainContent a {
	color:#666666;
	text-decoration:none;
}

.oneColFixCtrHdr #footer {
	padding: 0 10px; /* this padding matches the left alignment of the elements in the divs that appear above it. */
	background: url(../images/footer.png);
	background-color: none;
	height:60px;
	text-align:center;
}
.oneColFixCtrHdr #footer p {
	margin: 0; /* zeroing the margins of the first element in the footer will avoid the possibility of margin collapse - a space between divs */
	padding: 30px 0 20px 0; /* padding on this element will create space, just as the the margin would have, without the margin collapse issue */
	font-size: 12px;
	color: white;
}
#apDiv1 {
	position:absolute;
	width:215px;
	height:94px;
	z-index:1;
	left: 196px;
	top: 106px;
	border-color: #000;
}
#apDiv2 {
	position:absolute;
	width:365px;
	height:298px;
	z-index:1;
	left: 181px;
	top: 109px;
	border-color: #000;
}

.twoColFixLtHdr #container {
	width: 780px;  /* using 20px less than a full 800px width allows for browser chrome and avoids a horizontal scroll bar */
	background: none;
	margin: 0 auto; /* the auto margins (in conjunction with a width) center the page */
	text-align: left; /* this overrides the text-align: center on the body element. */
	height:auto;
}
.twoColFixLtHdr #header {
	background: url(../images/header.png);
	padding: 0 0px 0 0px;  /* this padding matches the left alignment of the elements in the divs that appear beneath it. If an image is used in the #header instead of text, you may want to remove the padding. */
	color: #CCC;
	font-size: 25px;
	font-family: Pristina;
	text-align: center;
	margin:0 0 0 0;
	clear: both;
	height:95px;
}
.twoColFixLtHdr #header h1 {
	margin: 0; /* zeroing the margin of the last element in the #header div will avoid margin collapse - an unexplainable space between divs. If the div has a border around it, this is not necessary as that also avoids the margin collapse */
	padding: 0 0; /* using padding instead of margin will allow you to keep the element away from the edges of the div */
}
.twoColFixLtHdr #mainContent {
	padding: 0 0px; /* remember that padding is the space inside the div box and margin is the space outside the div box */
	background: url(../images/contentbackground.png) repeat-x;
	background-color: #f0f0f0;
	text-align: center;
	margin:0px 0 0 0;
}

.twoColFixLtHdr #mainContent a {
	color:gray;
}

.twoColFixLtHdr #footer {
	padding: 0 10px; /* this padding matches the left alignment of the elements in the divs that appear above it. */
	background: url(../images/footer.png);
	background-color: none;
	height:60px;
}
.twoColFixLtHdr #footer p {
	margin: 0; /* zeroing the margins of the first element in the footer will avoid the possibility of margin collapse - a space between divs */
	padding: 30px 0 20px 0; /* padding on this element will create space, just as the the margin would have, without the margin collapse issue */
	font-size: 12px;
	color: white;
}


/* Two columns */

.twoColFixLtHdr #container {
	width: 780px;  /* using 20px less than a full 800px width allows for browser chrome and avoids a horizontal scroll bar */
	background: none;
	margin: 0 auto; /* the auto margins (in conjunction with a width) center the page */
	text-align: left; /* this overrides the text-align: center on the body element. */
	background-color: none;
} 

.twoColFixLtHdr #header h1 {
	margin: 0; /* zeroing the margin of the last element in the #header div will avoid margin collapse - an unexplainable space between divs. If the div has a border around it, this is not necessary as that also avoids the margin collapse */
	padding: 10px 0; /* using padding instead of margin will allow you to keep the element away from the edges of the div */
}
.twoColFixLtHdr #sidebar1 {
	float: left; /* since this element is floated, a width must be given */
	width: 200px; /* the actual width of this div, in standards-compliant browsers, or standards mode in Internet Explorer will include the padding and border in addition to the width */
	background: url(../images/sidebarbackground.png) repeat-x; /* the background color will be displayed for the length of the content in the column, but no further */
	padding: 15px 10px 15px 20px;
	background-color: white;
	font-weight: normal;
	clear:both;
}

.twoColFixLtHdr #sidebar1 li a{
	color:gray;	
}

.twoColFixLtHdr #sidebar1 a{
	color:gray;	
}

.twoColFixLtHdr #mainContent {
	margin: 0 0 0 200px; /* the left margin on this div element creates the column down the left side of the page - no matter how much content the sidebar1 div contains, the column space will remain. You can remove this margin if you want the #mainContent div's text to fill the #sidebar1 space when the content in #sidebar1 ends. */
	padding: 0 20px; /* remember that padding is the space inside the div box and margin is the space outside the div box */
	font-size: large;
	font-weight: normal;
	background:url(../images/contentbackground.png) repeat-x;
}

.twoColFixLtHdr #mainContent ul{
	font-weight:normal;
}

.twoColFixLtHdr #mainContent ul{
	font-weight:normal;
}

.twoColFixLtHdr #footer {
	padding: 0 10px; /* this padding matches the left alignment of the elements in the divs that appear above it. */
	background: url(../images/footer.png);
	background-color: none;
	height:60px;
	clear:both;
	text-align:center;
}
.twoColFixLtHdr #footer p {
	margin: 0; /* zeroing the margins of the first element in the footer will avoid the possibility of margin collapse - a space between divs */
	padding: 30px 0 20px 0; /* padding on this element will create space, just as the the margin would have, without the margin collapse issue */
	font-size: 12px;
	color: white;
}

.fltrt { /* this class can be used to float an element right in your page. The floated element must precede the element it should be next to on the page. */
	float: right;
	margin-left: 8px;
}
.fltlft { /* this class can be used to float an element left in your page */
	float: left;
	margin-right: 8px;
}
.clearfloat { /* this class should be placed on a div or break element and should be the final element before the close of a container that should fully contain a float */
	clear:both;
    height:0;
    font-size: 1px;
    line-height: 0px;
}